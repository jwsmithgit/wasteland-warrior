<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_virtual_boss_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = "alive";

image_speed = 4 / room_speed;

upgrade = false;

min_spawn_interval = room_speed * 2;
max_spawn_interval = room_speed * 8;

current_interval = min_spawn_interval + random( max_spawn_interval - min_spawn_interval );
alarm[0] = current_interval;

virtual_key_add( ( x - sprite_xoffset ) / room_width * display_get_width(), 
    ( y - sprite_yoffset )  / room_height * display_get_height(), 
    ( x - sprite_xoffset + sprite_width ) / room_width * display_get_width(), 
    ( y - sprite_yoffset + sprite_height ) / room_height * display_get_height(), vk_shift );
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// change to dead state
if ( obj_virtual_hero.has_sword ) {
    instance_create(x-sprite_width*3/4, 200, obj_virtual_sword_end);
}

sprite_index = spr_virtual_boss_death
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( obj_virtual_hero.state != "dead" ){
    
    // spawn a minion
    if( state == "spawning" ){
            
        image_xscale = 1;
        image_yscale = 1;
        
        instance_create( x - 40, y, obj_virtual_enemy );
    } else {
        state = "spawning";
        sprite_index = spr_virtual_boss_action;
        image_index = 0;
        
        alarm[0] = 7 / ( 4 / room_speed );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( state == "dead" and image_index &gt;= image_number-1 ) {
    image_speed = 0;
}

if( state == "spawning" and image_index &gt;= image_number-1 ){
    state = "standing";

    sprite_index = spr_virtual_boss_stand;
    image_index = 0;
    
    current_interval = min_spawn_interval + random( max_spawn_interval - min_spawn_interval );
    alarm[0] = current_interval;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( state == "spawning" and image_xscale &lt; 1.1 and image_index &lt;= 7
        /*and mouse_x &gt; x - sprite_xoffset and mouse_x &lt; x - sprite_xoffset + sprite_width and 
        mouse_y &gt; y - sprite_yoffset and  mouse_y &lt; y - sprite_yoffset + sprite_height*/  ){
        
    image_xscale *= 1.005;
    image_yscale *= 1.005;
}
else if ( image_xscale &gt;= 1.1
        /*and mouse_x &gt; x - sprite_xoffset and mouse_x &lt; x - sprite_xoffset + sprite_width and 
        mouse_y &gt; y - sprite_yoffset and  mouse_y &lt; y - sprite_yoffset + sprite_height*/  ){

    upgrade = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>upgrade = false;
image_xscale = 1;
image_yscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,159</point>
    <point>80,80</point>
  </PhysicsShapePoints>
</object>
