<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_real_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_time = room_speed * 60 * 3;
stall_time = room_speed * 10;
min_slow_time = room_speed*2;
max_slow_time = room_speed*7;

// 5 / 3 because object moves for 3 of 8 frames
move_speed = distance_to_point(obj_real_hero.x, obj_real_hero.y) / game_time * ( 5 / 3 );
slow_speed = move_speed * 4 / 5;
close_speed = move_speed * 6 / 5;
current_speed = move_speed;

move_image_speed = 4 / room_speed;
slow_image_speed = 3 / room_speed;
close_image_speed = 5 / room_speed;
stunned_image_speed = 8 / room_speed;
eating_image_speed = 6 / room_speed;
image_speed = move_image_speed;

state = "moving";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// reset back to move state
state = "moving";
current_speed = move_speed;
image_speed = move_image_speed;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( image_index &gt;= 5 ) {
    x += current_speed;
}

if( x &gt;= room_width*3/4 and x &lt; room_width*3/4 + current_speed and state != "close"){
    state = "close";
    current_speed = close_speed;
    image_speed = close_image_speed;
    if ( !audio_is_playing( snd_pa ) ) {
        audio_sound_gain( snd_pa, 0, 0 );
        audio_play_sound( snd_pa, 2, true );
        audio_sound_gain( snd_pa, 0.5, 10000 );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_real_stall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( other.image_index != 0 and state != "stunned" ) {
    state = "stunned";
    current_speed = 0;  
    image_speed = stunned_image_speed;
    
    alarm[0] = stall_time;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_real_hero">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// stop moving when it reaches center of character
if ( x &gt;= other.x and state != "eating" ) {

    state = "eating";
    current_speed = 0;
    image_speed = eating_image_speed;
    
}

move_towards_point( obj_real_hero.x + 10, obj_real_hero.y - ( obj_real_hero.sprite_height / 2 ) - 6, 0.5 );
if ( image_angle &lt; 180 and x &gt;= obj_real_hero.x + 4 and y &lt;= obj_real_hero.y - ( obj_real_hero.sprite_height / 2 ) - 2 ) {
    image_angle += 2
}
if ( image_angle &lt; 30 ) {

    image_angle += 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if( mouse_x &gt; x - sprite_xoffset - 4 and mouse_x &lt; x - sprite_xoffset + sprite_width + 4 
    and mouse_y &gt; y - sprite_yoffset - 4 and mouse_y &lt; y - sprite_yoffset + sprite_height + 4 ){
    
    image_xscale = 1;
    image_yscale = 1;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if ( mouse_x &gt; x - sprite_xoffset - 4 and mouse_x &lt; x - sprite_xoffset + sprite_width + 4 
    and mouse_y &gt; y - sprite_yoffset - 4 and mouse_y &lt; y - sprite_yoffset + sprite_height + 4 ){
    
    image_xscale = .8;
    image_yscale = .8;
    
    if ( state == "moving" ) {
    
        state = "slow"
        current_speed = slow_speed;
        image_speed = slow_image_speed;
        
        alarm[0] = room_speed * ( min_slow_time + random( max_slow_time - min_slow_time ) );
    }
    
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,63</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
