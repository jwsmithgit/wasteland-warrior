<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stat_damage</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 0;
y = 310;

//thous = instance_create(8, 318, obj_stat_number);
//hund = instance_create(12 + obj_stat_number.sprite_width, 318, obj_stat_number);
ten = instance_create(16 + obj_stat_number.sprite_width*2, 318, obj_stat_number);
one = instance_create(20 + obj_stat_number.sprite_width*3, 318, obj_stat_number);

min_damage = 5;
max_damage = 80; //min_damage + (obj_stat_lvl.max_level * obj_stat_lvl.points_per_level);

// 1-1 key value, dont need to keep level value;

damage = min_damage;
num = damage;
alarm[0] = 1;

notifier = noone;

virtual_key_add( ( x - sprite_xoffset ) / room_width * display_get_width(),
    ( y - sprite_yoffset ) / room_height * display_get_height(),  
    ( sprite_width ) / room_width * display_get_width(),
    ( sprite_height ) / room_height * display_get_height(), ord('A') );
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( num &lt; damage ){
    num += 1;
    alarm[0] = room_speed/8;
}

if ( num &lt; 10 ){
    scr_choose_number(one, num);
} else /*if ( num &lt; 100 )*/{
    if( scr_choose_number(one, real(string_char_at(string(num), 2))) == 0){
        scr_choose_number(ten, real(string_char_at(string(num), 1)))
    }
} /*else if ( num &lt; 1000 ){
    if( scr_choose_number(one, real(string_char_at(string(num), 3))) == 0){
        if( scr_choose_number(ten, real(string_char_at(string(num), 2))) == 0){
            scr_choose_number(hund, real(string_char_at(string(num), 1))) 
        }
    }
} else {
    if( scr_choose_number(one, real(string_char_at(string(num), 4))) == 0){
        if( scr_choose_number(ten, real(string_char_at(string(num), 3))) == 0){
            if( scr_choose_number(hund, real(string_char_at(string(num), 2))) == 0){
                scr_choose_number(thous, real(string_char_at(string(num), 1))) 
            }
        }
    }
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( obj_stat_lvl.points &gt; 0 ){
   
    // trigger objects to make notification
    instance_create( 8, 360, obj_stat_notification_2 );

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( /*mouse_y &gt; 200 and mouse_y &lt; 300 and mouse_x &gt; 100 and mouse_x &lt; 200 
        and */ obj_stat_lvl.points &gt; 0 and damage &lt; max_damage ){
   
    obj_stat_lvl.points -= 1;
    if ( obj_stat_lvl.points == 0 ){
        with ( obj_stat_notification ) instance_destroy();
    }
    
    damage += 1;
    if ( damage &gt; max_damage ){
        damage = max_damage
    }
    
    if( alarm[0] == -1 ){
        alarm[0] = 1;
    }
}

with ( obj_stat_notification_2 ) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
